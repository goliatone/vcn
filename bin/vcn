#!/usr/bin/env node
/*
 * vecna
 * https://github.com/eburgos/vecna
 *
 * Copyright (c) 2015 goliatone
 * Licensed under the MIT license.
 */

'use strict';

require('yargonaut')
  .style('cyan')
  .helpStyle('green.bold')
  .style('yellow', 'required');


var resolve = require('path').resolve,
    Vcn = require('../lib');

var argv = require('yargs')
    .usage('Usage: $0 <command> [options]')
    .command('put', 'Encrypt and store file in bucket')
    .command('get', 'Retrieve and decrypt file from bucket')
    .command('del', 'Delete file from bucket')
    .command('list', 'List files bucket')
    .option('b',{
        alias:'bucket',
        describe: 'Bucket name',
        type: 'string',
        required: true
    })
    .option('f', {
        alias:'filepath',
        describe: 'Path to write or read file',
        type: 'string',
        required: false
    })
    .option('i', {
        alias: 'id',
        describe: 'Secret identifier',
        type: 'string',
        required: true
    })
    .option('g', {
        alias: 'group-id',
        describe: ' Group id',
        type: 'string',
        default: Vcn.DEFAULTS.groupId
    })
    .option('p', {
        alias: 'password',
        describe: 'Secret password',
        type: 'string',
        required: true
    })
    .version( function() {
  		return 'cicerone version: ' + require( '../package' ).version;
    })
    .help('h')
    .alias('h', 'help')
    .alias( 'help', '?' )
    .epilog('MIT License 2015')
    .argv;


//TODO: We should check to see if the filepath exists
// console.log(argv);
if(argv.filepath) argv.filepath = resolve(argv.filepath);

var cmd = argv._[0];
Vcn.exec(cmd, argv).then(function(data){
    if(cmd !== 'list') return;
    require('./list')(data);
});
